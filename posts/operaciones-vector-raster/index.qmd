---
title: "Operaciones entre vectores y raster"
description: "Aprendiendo a cortar un raster, estadisticas zonales, extraer información de puntos, etc "
author: "Daniela O"
categories: [SIG, R, Terra, Map]
date: 2025-01-25
toc-expand: true
editor_options: 
  chunk_output_type: console
---

Vamos a iniciar...😜

## Cortar un raster con un vector

```{r}
#| label: librerias necesarias

library(raster)
library(sf)
```

```{r}
#| label: cargar recursos

# cargar las capas 

col_shp <- read_sf("data_0.shp")
bio_1 <- raster("bio/bio2.tif")
bio_1
plot(bio_1)
```

```{r}
#| label: cortar con crop

# cortando shape con raster

b1 <- crop(bio_1, col_shp)
plot(b1)
```

Se coloca primero la capa raster luego el shape. Crop lo que hace es que recorta el raster con la silueta de un cuadrado

```{r}
#| label: cortar

# cortando shape con raster

b2 <- mask(b1, col_shp)
           # raster, poligono 
plot(b2)
```

```{r}
# Juntando las funciones para que sea un solo comando

cortado <- bio_1 |> crop(col_shp) |> mask(col_shp)
plot(cortado)
```

::: callout-important
## Tener en cuenta

Se aconseja utilizar primero la función `crop` para luego ejecutar `mask`
:::

[**Para cortar un stack se aplica el mismo proceso anterior.**]{style="color:red;"}

## Raster a puntos

Entre mayor resolución tenga el raster mayor cantidad de puntos se va a tener.

```{r}
# librerias
library(raster)
library(rgdal)
library(sf)
```

```{r}
# extraer puntos 
ext_bio <- rasterToPoints(cortado) |> as.data.frame()

library(ggplot2)

ggplot() + geom_density(data= ext_bio, aes(x=bio2), col="black") + theme_bw()
```

# Extraer información de raster a puntos

Esto sirve para cuando buscamos extraer una información de algunos puntos en función de un aster que contenga una variable.

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(raster)
library(dplyr)
bios1 <- raster("wc5/bio1.bil") # Temp promedio anual 
puntos <- read.csv("Registros.csv", header = TRUE)
```

```{r}
plot(bios1)
names(puntos)
points(puntos[,c(7:6)])
```

```{r}
ta_sp <- extract(bios1, puntos[,c(7:6)])
ta_sp
```

```{r}
data_final <- cbind(puntos, ta_sp)
glimpse(data_final)
```

# Estadísticas zonales

Determinar cálculos de media, varianza de un raster que se encuentra dentro de un área de estudio.

```{r}
#| eval: false

library(sf)
library(raster)
library(geodata)
#install.packages("exactextractr")
library(exactextractr)
```

```{r}
#| eval: false

# obteniendo el raster
pob <- geodata:: population(year = 2020, res = 2.5, path = "population/")

# obteniendo el shape 
ec <- geodata::gadm(country = "Ecuador", level = 1, path = "polig_ecuador/") |> st_as_sf()

```

```{r}
#| eval: false

zonal_stats <- exact_extract(pob, ec, fun= c("sum", "variance"), progress= TRUE) # progress muestra una barra de progreso en la consola

zonal_stats_df <- cbind(ec, zonal_stats)
```
