[
  {
    "objectID": "posts/vincular_git/index.html",
    "href": "posts/vincular_git/index.html",
    "title": "Vinculando Rstudio con Github y Git",
    "section": "",
    "text": "Para vincular Rstudio con Github mediante Git se debe:"
  },
  {
    "objectID": "posts/vincular_git/index.html#instalar-git-en-tu-computador",
    "href": "posts/vincular_git/index.html#instalar-git-en-tu-computador",
    "title": "Vinculando Rstudio con Github y Git",
    "section": "1. Instalar git  en tu computador",
    "text": "1. Instalar git  en tu computador\nInstalas Git en el siguiente enlace (‚è¨ aqu√≠). Por default acepta todas las configuraciones.\n\n\n\nInterfaz de git"
  },
  {
    "objectID": "posts/vincular_git/index.html#configurar-git-en-tu-rstudio",
    "href": "posts/vincular_git/index.html#configurar-git-en-tu-rstudio",
    "title": "Vinculando Rstudio con Github y Git",
    "section": "2. Configurar git en tu Rstudio",
    "text": "2. Configurar git en tu Rstudio\nUna vez instalado llamas a ibrary (usethis) y en la terminal a√±ades lo siguiente\n\n\nTerminal\n\nlibrary (usethis)\nuse_git_config(user.name=\"name en gihub\", user.email=\"correo de github\")\n\nPuedes ayudarte con este video gu√≠a üé•(https://www.youtube.com/watch?v=QLFc9gw_Hfs)"
  },
  {
    "objectID": "posts/vincular_git/index.html#vincular-un-proyecto-existente-a-github",
    "href": "posts/vincular_git/index.html#vincular-un-proyecto-existente-a-github",
    "title": "Vinculando Rstudio con Github y Git",
    "section": "3. Vincular un proyecto existente a Github",
    "text": "3. Vincular un proyecto existente a Github\nPara subir un proyecto que ya hayas creado en Rstudio a Github puedes guiarte del siguiente en enlace (‚¨áÔ∏èVideo). Para trabajar con un proyecto existente en Github y llevarlo a Rstudio puedes guiarte con este tutorial (‚è¨Video)."
  },
  {
    "objectID": "posts/SIG-r-part2_vector/index.html",
    "href": "posts/SIG-r-part2_vector/index.html",
    "title": "SIG con R: Vectores part 2",
    "section": "",
    "text": "Continuaci√≥n de apuntes con manipulaci√≥n y operaci√≥n con vectores"
  },
  {
    "objectID": "posts/SIG-r-part2_vector/index.html#crear-pol√≠gonos-m√≠nimos-convexos",
    "href": "posts/SIG-r-part2_vector/index.html#crear-pol√≠gonos-m√≠nimos-convexos",
    "title": "SIG con R: Vectores part 2",
    "section": "Crear pol√≠gonos m√≠nimos convexos",
    "text": "Crear pol√≠gonos m√≠nimos convexos\nEn ecolog√≠a y biolog√≠a nos ayuda para determinar h√°bitos hogare√±os, es decir, encontrar el √°rea en el que se desplaza una especie.\n\n# librerias requeridas\nlibrary(sf)\nlibrary(mapview)\nlibrary(dplyr)\n\n\n# Cargamos el dataframe con los puntos\n\nregistros&lt;-read.csv(\"Registros.csv\", header = T) %&gt;% st_as_sf(coords=c(\"Longitude\",\"Latitude\"), crs=4326)\nmapview(registros)\n\n\n\n\n\n\n# Observar solo la sp1\nsp1&lt;-filter(registros, Species==\"sp1\")\nmapview(sp1)\n\n\n\n\n\n\n# Generar PMC para una sola especie\npmc1&lt;- sp1 %&gt;% group_by(Species) %&gt;%\n    summarise(geometry= st_combine(geometry)) |&gt; st_convex_hull()\n\nmapview(list(pmc1, sp1))\n\n\n\n\n\n\n# Generar poligonos para todas las especies\npmc_spp&lt;- registros %&gt;% group_by(Species) %&gt;%\n    summarise(geometry= st_combine(geometry)) %&gt;%\n    st_convex_hull()\n\nmapview(list(pmc_spp, registros))"
  },
  {
    "objectID": "posts/SIG-r-part2_vector/index.html#b√∫feres",
    "href": "posts/SIG-r-part2_vector/index.html#b√∫feres",
    "title": "SIG con R: Vectores part 2",
    "section": "B√∫feres",
    "text": "B√∫feres\n¬ø C√≥mo dibujar un √°rea sobre sobre un pol√≠gono ?\n\n# librerias requeridas\nlibrary(sf)\nlibrary(mapedit)\nlibrary(mapview)\nlibrary(tidyverse)\n\n\n# para dibujar los shapefile\npoligono &lt;-mapview() %&gt;% editMap()\npuntos &lt;-mapview() %&gt;% editMap()\nlineas &lt;-mapview() %&gt;% editMap()\n\nmapview(poligono$drawn)\n\n#transformar sistemas de coordenadas\npolig&lt;- poligono$finished %&gt;% st_transform(crs=32618)\npoint&lt;- puntos$finished %&gt;% st_transform(crs=32618)\nrutas&lt;- lineas$finished %&gt;% st_transform(crs=32618)\n\nmapview(list(polig, point, rutas))\n\n\n# write_sf(poligono$drawn, \"polig.shp\")\n\nTengan en cuenta que el sistema de coordenadas de referencia nos marca las unidades de distancia (En este caso el sistema de coordenadas esta en UTM y trabaja las distancias en metros). Si quieren que las unidades sean metros deben reproyectar su capa. 1 km equivale a aproximadamente 0.0083333 grados\n\n# creando buffer \n1polibuff&lt;-st_buffer(polig, dist= 10000)\nmapview(list(polig, polibuff))\n\npuntbuff&lt;-st_buffer(point, dist= 5000)\nmapview(list(point, puntbuff))\n\nlinbuff&lt;-st_buffer(rutas, dist= 500)\nmapview(list(rutas, linbuff))\n\n\n1\n\nla distancia este en metros üòÄ que equivalen a 10 km\n\n\n\n\n\n# buffer negativo\npolibuff2&lt;-st_buffer(polig, dist= -10000)\nmapview(list(polig, polibuff, polibuff2))"
  },
  {
    "objectID": "posts/SIG-r-part2_vector/index.html#calculando-√°reas",
    "href": "posts/SIG-r-part2_vector/index.html#calculando-√°reas",
    "title": "SIG con R: Vectores part 2",
    "section": "Calculando √°reas",
    "text": "Calculando √°reas\n\n# Calculo de areas\n1a_po&lt;-st_area(polig)/1000000\na_pb&lt;-st_area(polibuff)/1000000\na_pb2&lt;-st_area(polibuff2)/1000000\n\n\n1\n\nSe divide entre un mill√≥n para pasar de \\(m^2\\) a \\(km^2\\)\n\n\n\n\n\nareakm2&lt;-c(a_po, a_pb, a_pb2)\n# calculando diferencias entre los poligonos\nareakm2[1]-areakm2[2]\nareakm2[1]-areakm2[3]\n\n\ncol&lt;- read_sf(\"COL_adm1.shp\")\narea_col&lt;-st_area(col)/1000000\n\n#calculo de areas de departamentos \nareas_depa&lt;- col %&gt;% mutate(AREAKM=st_area(col)/1000000)"
  },
  {
    "objectID": "posts/Paquete_Terra/index.html",
    "href": "posts/Paquete_Terra/index.html",
    "title": "Generalidades del paquete Terra",
    "section": "",
    "text": "El paquete geodata permite descargar shapes de diferentes paises.\n# install.packages(\"geodata\")\nlibrary(geodata)\n# install.packages(\"terra\")\nlibrary(terra)\n\n# para encontrar el shape de un pais por codigo\n# country_codes()\n# iniciamos la busquedad del shape del pais\n\n# col_0 &lt;- gadm(\"colombia\", level = 0, version = \"latest\", resolution = 2, path = getwd())\n\n# plot(col_0)\nEn path se selecciona la ruta en donde queremos guardar el shape. En resolution 2 es baja mientrras que resolution 1 es alta\n#install.packages(\"sf\")\nlibrary(sf)\n#col_sf &lt;- st_as_sf(col_0)\n# Guardar con opcion de sf\nwrite_sf(col_sf, \"posts/Paquete_Terra/Colombia_LO.shp\")\n\n# Guardar con opcion de terra\nwriteVector(col_sf, \"posts/Paquete_Terra/Colombia_LO.shp\")\nAhora podemos visualizar el shape con el parquete sf o terra\n1shp1 &lt;- sf::read_sf(\"COL_adm1.shp\")\nshp2 &lt;- terra::vect(\"COL_adm1.shp\")\n\n\n1\n\nSe genera un shape con una tabla de atributos\nPara graficar empleamos el comando plot() pero este te gr√°fica un mapa por cada columna que tenga el shape. Entonces para eso especificamos la columna que queremos\n# especificando la columna\n1plot(shp1[,4])\n\n\n1\n\npara el gr√°fico con sf tienes que especificar el numero de columna mientras que con terra si puedes a√±adir el nombre de la columna\nplot(shp2, \"NAME_1\") # shape abierto con terra"
  },
  {
    "objectID": "posts/Paquete_Terra/index.html#manipulaci√≥n-de-vectores",
    "href": "posts/Paquete_Terra/index.html#manipulaci√≥n-de-vectores",
    "title": "Generalidades del paquete Terra",
    "section": "Manipulaci√≥n de vectores üòÅ",
    "text": "Manipulaci√≥n de vectores üòÅ\n\nlibrary(dplyr)\n\n# opci√≥n 1 \narauca&lt;- filter(shp1, NAME_1 == \"Arauca\")\nplot(arauca[,1])\n\n\n\n\n\n\n\n\n\n# opci√≥n 2: funciona muy bien para los otros dos tipos\n\nBoyaca &lt;- subset(shp2, shp2$NAME_1 == \"Boyac√°\")\nplot(Boyaca)\n\n\n\n\n\n\n\n\n\nVerificar sistemas de coordenadas de referencias\n\ncrs(shp2)\n\n[1] \"GEOGCRS[\\\"WGS 84\\\",\\n    DATUM[\\\"World Geodetic System 1984\\\",\\n        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n            LENGTHUNIT[\\\"metre\\\",1]]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    ID[\\\"EPSG\\\",4326]]\"\n\nshp2 # Tambi√©n la coordenada se puede consultar con esta funci√≥n \n\n class       : SpatVector \n geometry    : polygons \n dimensions  : 32, 9  (geometries, attributes)\n extent      : -81.84153, -66.87033, -4.228429, 15.91247  (xmin, xmax, ymin, ymax)\n source      : COL_adm1.shp\n coord. ref. : lon/lat WGS 84 (EPSG:4326) \n names       :  ID_0   ISO   NAME_0  ID_1    NAME_1       TYPE_1   ENGTYPE_1\n type        : &lt;num&gt; &lt;chr&gt;    &lt;chr&gt; &lt;num&gt;     &lt;chr&gt;        &lt;chr&gt;       &lt;chr&gt;\n values      :    53   COL Colombia     1  Amazonas    Comisar√≠a Commissiary\n                  53   COL Colombia     2 Antioquia Departamento  Department\n                  53   COL Colombia     3    Arauca  Intendencia  Intendancy\n NL_NAME_1 VARNAME_1\n     &lt;chr&gt;     &lt;chr&gt;\n        NA        NA\n        NA        NA\n        NA        NA\n\n\n\n\nReproyectar sistema con paquete terra y sf\n\nshp1.b &lt;- sf::st_transform(shp1, crs = 32618)\n\nshp2.b &lt;- terra::project(shp2, \"+proj=utm +zone=18 +ellps=clrk66 +units=m +no_defs +type=crs\" )\n\n\n\n\n\n\n\nNote\n\n\n\nEn terra el sistema de coordenada debe especificarse como Proj4, mientras que sf es con EPSG üëÅÔ∏è"
  },
  {
    "objectID": "posts/Limpieza_manipulacion_data/index.html",
    "href": "posts/Limpieza_manipulacion_data/index.html",
    "title": "Limpieza y manipulaci√≥n de base de datos",
    "section": "",
    "text": "Para realizar cambios y manipulaci√≥n de base de datos.\n\nCambiar nombre de una fila en una base de datos\n\n# cargando base de datos de ejemplo\nlibrary(tidyverse)\ndf1&lt;- read.csv(\"fruits.txt\", sep=\"\")\ndf1\n\n   Fruit Cost\n1  apple    6\n2  apple    7\n3 orange    3\n4 orange    4\n\n\n\nlibrary(dplyr)\nlibrary(car)\n1res &lt;- mutate(df1, Fruit= recode(Fruit, \"'apple'='lemon';'orange'='grape'\"))\nres\n\n\n1\n\nrecode hace parte de la library(car)\n\n\n\n\n  Fruit Cost\n1 lemon    6\n2 lemon    7\n3 grape    3\n4 grape    4"
  },
  {
    "objectID": "posts/datos_GBIF/index.html",
    "href": "posts/datos_GBIF/index.html",
    "title": "Descarga de datos del GBIF",
    "section": "",
    "text": "Descargando datos\n\nlibrary(tidyverse)\nlibrary(rgbif)\n\n\n# descargando datos\n\n# Instalar y cargar la librer√≠a rgbif si no est√° instalada\nif(!require(rgbif)) {\n  install.packages(\"rgbif\")\n}\nlibrary(rgbif)\n\n# Par√°metros de b√∫squeda\ntaxon_key &lt;- name_backbone(name=\"Mammalia\")$usageKey # Buscar el c√≥digo del tax√≥n Mammalia\ncountry_code &lt;- \"CO\" # C√≥digo ISO para Colombia\ndepartment &lt;- \"Magdalena\" # Departamento Magdalena\n\n# Realizar la b√∫squeda de datos\nocc_data &lt;- occ_search(\n  taxonKey = taxon_key, \n  country = country_code, \n  stateProvince = department, \n  hasCoordinate = TRUE,  # Filtrar solo registros con coordenadas\n  limit = 1000 # L√≠mite de registros\n)\n\n# Ver los primeros resultados\nhead(occ_data$data)\n\n# A tibble: 6 √ó 147\n  key        scientificName   decimalLatitude decimalLongitude issues datasetKey\n  &lt;chr&gt;      &lt;chr&gt;                      &lt;dbl&gt;            &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     \n1 4510334177 Dasyprocta punc‚Ä¶            11.1            -74.1 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n2 4936855480 Saguinus oedipu‚Ä¶            11.3            -74.2 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n3 4512238973 Cebus malitiosu‚Ä¶            11.2            -74.0 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n4 4516701288 Alouatta senicu‚Ä¶            11.1            -74.1 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n5 4516613051 Alouatta senicu‚Ä¶            11.3            -73.9 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n6 4516840799 Cerdocyon thous‚Ä¶            11.3            -73.9 cdc    50c9509d-‚Ä¶\n# ‚Ñπ 141 more variables: publishingOrgKey &lt;chr&gt;, installationKey &lt;chr&gt;,\n#   hostingOrganizationKey &lt;chr&gt;, publishingCountry &lt;chr&gt;, protocol &lt;chr&gt;,\n#   lastCrawled &lt;chr&gt;, lastParsed &lt;chr&gt;, crawlId &lt;int&gt;, basisOfRecord &lt;chr&gt;,\n#   occurrenceStatus &lt;chr&gt;, lifeStage &lt;chr&gt;, taxonKey &lt;int&gt;, kingdomKey &lt;int&gt;,\n#   phylumKey &lt;int&gt;, classKey &lt;int&gt;, orderKey &lt;int&gt;, familyKey &lt;int&gt;,\n#   genusKey &lt;int&gt;, speciesKey &lt;int&gt;, acceptedTaxonKey &lt;int&gt;,\n#   acceptedScientificName &lt;chr&gt;, kingdom &lt;chr&gt;, phylum &lt;chr&gt;, order &lt;chr&gt;, ‚Ä¶\n\n\n\nocc&lt;- data.frame(occ_data$data)\n# view(occ)\n\nocc_depu&lt;- occ |&gt; select(-c(5,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,34,35,39,43:147))\n\nglimpse(occ_depu)\n\nRows: 1,000\nColumns: 20\n$ key                    &lt;chr&gt; \"4510334177\", \"4936855480\", \"4512238973\", \"4516‚Ä¶\n$ scientificName         &lt;chr&gt; \"Dasyprocta punctata Gray, 1842\", \"Saguinus oed‚Ä¶\n$ decimalLatitude        &lt;dbl&gt; 11.14510, 11.25700, 11.23540, 11.09190, 11.2894‚Ä¶\n$ decimalLongitude       &lt;dbl&gt; -74.11477, -74.16946, -73.95590, -74.07312, -73‚Ä¶\n$ datasetKey             &lt;chr&gt; \"50c9509d-22c7-4a22-a47d-8c48425ef4a7\", \"50c950‚Ä¶\n$ basisOfRecord          &lt;chr&gt; \"HUMAN_OBSERVATION\", \"HUMAN_OBSERVATION\", \"HUMA‚Ä¶\n$ occurrenceStatus       &lt;chr&gt; \"PRESENT\", \"PRESENT\", \"PRESENT\", \"PRESENT\", \"PR‚Ä¶\n$ acceptedScientificName &lt;chr&gt; \"Dasyprocta punctata Gray, 1842\", \"Saguinus oed‚Ä¶\n$ kingdom                &lt;chr&gt; \"Animalia\", \"Animalia\", \"Animalia\", \"Animalia\",‚Ä¶\n$ phylum                 &lt;chr&gt; \"Chordata\", \"Chordata\", \"Chordata\", \"Chordata\",‚Ä¶\n$ order                  &lt;chr&gt; \"Rodentia\", \"Primates\", \"Primates\", \"Primates\",‚Ä¶\n$ family                 &lt;chr&gt; \"Dasyproctidae\", \"Callitrichidae\", \"Cebidae\", \"‚Ä¶\n$ genus                  &lt;chr&gt; \"Dasyprocta\", \"Saguinus\", \"Cebus\", \"Alouatta\", ‚Ä¶\n$ species                &lt;chr&gt; \"Dasyprocta punctata\", \"Saguinus oedipus\", \"Ceb‚Ä¶\n$ taxonRank              &lt;chr&gt; \"SPECIES\", \"SPECIES\", \"SPECIES\", \"SPECIES\", \"SP‚Ä¶\n$ taxonomicStatus        &lt;chr&gt; \"ACCEPTED\", \"ACCEPTED\", \"ACCEPTED\", \"ACCEPTED\",‚Ä¶\n$ iucnRedListCategory    &lt;chr&gt; \"LC\", \"CR\", \"EN\", \"LC\", \"LC\", \"LC\", \"LC\", \"EN\",‚Ä¶\n$ continent              &lt;chr&gt; \"SOUTH_AMERICA\", \"SOUTH_AMERICA\", \"SOUTH_AMERIC‚Ä¶\n$ stateProvince          &lt;chr&gt; \"Magdalena\", \"Magdalena\", \"Magdalena\", \"Magdale‚Ä¶\n$ year                   &lt;int&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,‚Ä¶\n\n\n\n# write.csv2(occ_depu, \"obs_mamigeros.csv\")\n\n\n# datos de herpetos \nif(!require(rgbif)) {\n  install.packages(\"rgbif\")\n}\nlibrary(rgbif)\n\n# Par√°metros de b√∫squeda\ntaxon_key &lt;- name_backbone(name=\"Reptilia\")$usageKey # Buscar el c√≥digo del tax√≥n Mammalia\ncountry_code &lt;- \"CO\" # C√≥digo ISO para Colombia\ndepartment &lt;- \"Magdalena\" # Departamento Magdalena\n\n# Realizar la b√∫squeda de datos\nocc_data &lt;- occ_search(\n  taxonKey = taxon_key, \n  country = country_code, \n  stateProvince = department, \n  hasCoordinate = TRUE,  # Filtrar solo registros con coordenadas\n  limit = 2000 # L√≠mite de registros\n)\n\n# Ver los primeros resultados\nhead(occ_data$data)\n\n# A tibble: 6 √ó 101\n  key        scientificName   decimalLatitude decimalLongitude issues datasetKey\n  &lt;chr&gt;      &lt;chr&gt;                      &lt;dbl&gt;            &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     \n1 4507796310 Anolis auratus ‚Ä¶            11.2            -74.1 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n2 4510128617 Tretioscincus b‚Ä¶            11.3            -74.0 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n3 4510334177 Dasyprocta punc‚Ä¶            11.1            -74.1 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n4 4510151452 Vanellus chilen‚Ä¶            11.2            -74.2 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n5 4510413766 Atractus sancta‚Ä¶            11.1            -74.1 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n6 4510187739 Mastigodryas bo‚Ä¶            11.1            -74.1 cdc,c‚Ä¶ 50c9509d-‚Ä¶\n# ‚Ñπ 95 more variables: publishingOrgKey &lt;chr&gt;, installationKey &lt;chr&gt;,\n#   hostingOrganizationKey &lt;chr&gt;, publishingCountry &lt;chr&gt;, protocol &lt;chr&gt;,\n#   lastCrawled &lt;chr&gt;, lastParsed &lt;chr&gt;, crawlId &lt;int&gt;, basisOfRecord &lt;chr&gt;,\n#   occurrenceStatus &lt;chr&gt;, taxonKey &lt;int&gt;, kingdomKey &lt;int&gt;, phylumKey &lt;int&gt;,\n#   classKey &lt;int&gt;, familyKey &lt;int&gt;, genusKey &lt;int&gt;, speciesKey &lt;int&gt;,\n#   acceptedTaxonKey &lt;int&gt;, acceptedScientificName &lt;chr&gt;, kingdom &lt;chr&gt;,\n#   phylum &lt;chr&gt;, family &lt;chr&gt;, genus &lt;chr&gt;, species &lt;chr&gt;, ‚Ä¶\n\n\n\nocc_reptilia&lt;- data.frame(occ_data$data)\n#view(occ_reptilia)\n\nocc_depu_r&lt;- occ_reptilia |&gt; select(-c(7,8,9,10:13,14,17:24,36:58,60:101))\n\nglimpse(occ_depu_r)\n\nRows: 2,000\nColumns: 20\n$ key                    &lt;chr&gt; \"4507796310\", \"4510128617\", \"4510334177\", \"4510‚Ä¶\n$ scientificName         &lt;chr&gt; \"Anolis auratus Daudin, 1802\", \"Tretioscincus b‚Ä¶\n$ decimalLatitude        &lt;dbl&gt; 11.23691, 11.32014, 11.14510, 11.22588, 11.1014‚Ä¶\n$ decimalLongitude       &lt;dbl&gt; -74.14756, -73.95403, -74.11477, -74.18608, -74‚Ä¶\n$ issues                 &lt;chr&gt; \"cdc,cdround\", \"cdc,cdround\", \"cdc,cdround\", \"c‚Ä¶\n$ datasetKey             &lt;chr&gt; \"50c9509d-22c7-4a22-a47d-8c48425ef4a7\", \"50c950‚Ä¶\n$ basisOfRecord          &lt;chr&gt; \"HUMAN_OBSERVATION\", \"HUMAN_OBSERVATION\", \"HUMA‚Ä¶\n$ occurrenceStatus       &lt;chr&gt; \"PRESENT\", \"PRESENT\", \"PRESENT\", \"PRESENT\", \"PR‚Ä¶\n$ acceptedScientificName &lt;chr&gt; \"Anolis auratus Daudin, 1802\", \"Tretioscincus b‚Ä¶\n$ kingdom                &lt;chr&gt; \"Animalia\", \"Animalia\", \"Animalia\", \"Animalia\",‚Ä¶\n$ phylum                 &lt;chr&gt; \"Chordata\", \"Chordata\", \"Chordata\", \"Chordata\",‚Ä¶\n$ family                 &lt;chr&gt; \"Dactyloidae\", \"Gymnophthalmidae\", \"Dasyproctid‚Ä¶\n$ genus                  &lt;chr&gt; \"Anolis\", \"Tretioscincus\", \"Dasyprocta\", \"Vanel‚Ä¶\n$ species                &lt;chr&gt; \"Anolis auratus\", \"Tretioscincus bifasciatus\", ‚Ä¶\n$ genericName            &lt;chr&gt; \"Anolis\", \"Tretioscincus\", \"Dasyprocta\", \"Vanel‚Ä¶\n$ specificEpithet        &lt;chr&gt; \"auratus\", \"bifasciatus\", \"punctata\", \"chilensi‚Ä¶\n$ taxonRank              &lt;chr&gt; \"SPECIES\", \"SPECIES\", \"SPECIES\", \"SPECIES\", \"SP‚Ä¶\n$ taxonomicStatus        &lt;chr&gt; \"ACCEPTED\", \"ACCEPTED\", \"ACCEPTED\", \"ACCEPTED\",‚Ä¶\n$ iucnRedListCategory    &lt;chr&gt; \"LC\", \"LC\", \"LC\", \"LC\", \"LC\", NA, \"LC\", \"LC\", N‚Ä¶\n$ class                  &lt;chr&gt; \"Squamata\", \"Squamata\", \"Mammalia\", \"Aves\", \"Sq‚Ä¶\n\nocc_depu_r$class &lt;- as.factor(occ_depu_r$class)\n\n# Ver los niveles de la variable categ√≥rica \"class\"\nnombres_categorias &lt;- levels(occ_depu_r$class)\nprint(nombres_categorias)\n\n[1] \"Amphibia\"       \"Aves\"           \"Crocodylia\"     \"Elasmobranchii\"\n[5] \"Mammalia\"       \"Squamata\"       \"Testudines\"    \n\nocc_r &lt;- occ_depu_r |&gt; filter(class == c(\"Amphibia\", \"Mammalia\" , \"Squamata\"))\n\n# view(occ_r)\n\n# write.csv2(occ_r, \"obs_reptilia.csv\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Operaciones entre vectores y raster\n\n\n\n\n\nAprendiendo a cortar un raster, estadisticas zonales, extraer informaci√≥n de puntos, etc \n\n\n\n\n\nJan 25, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nGeneralidades del paquete Terra\n\n\n\n\n\nConsideraciones de la library(terra) \n\n\n\n\n\nJan 25, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nArchivos raster en R\n\n\n\n\n\nCreaci√≥n, importaci√≥n y exportaci√≥n de archivos raster\n\n\n\n\n\nOct 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nDescarga de datos del UICN\n\n\n\n\n\nDescarga de datos de UICN\n\n\n\n\n\nSep 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nDescarga de datos del GBIF\n\n\n\n\n\nDescargando datos\n\n\n\n\n\nSep 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nSIG con R: Vectores part 2\n\n\n\n\n\nApuntes de la escuela ambiental\n\n\n\n\n\nJul 28, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nSIG con R: Vectores part 1\n\n\n\n\n\nApuntes de la escuela ambiental\n\n\n\n\n\nJul 27, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nLimpieza y manipulaci√≥n de base de datos\n\n\n\n\n\nlimpiando y manipulando datos con tidyverse y otras\n\n\n\n\n\nJul 25, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nModelos de Distribuci√≥n de Especies (SDM) en R\n\n\n\n\n\nNotas del curso de Udemy por Fabio Castro\n\n\n\n\n\nJun 12, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nVinculando Rstudio con Github y Git\n\n\n\n\n\nVincular Rstudio con Github mediante Git\n\n\n\n\n\nMay 20, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Datos_UICN/index.html",
    "href": "posts/Datos_UICN/index.html",
    "title": "Descarga de datos del UICN",
    "section": "",
    "text": "Descarga de datos del UICN\n\n# liberias requeridas\nlibrary(taxize) # acceder a datos de UICN\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rredlist)\nlibrary(writexl)\nlibrary(httr)\n\n\ndata&lt;- read_excel(\"especies.xlsx\")\nhead(data)\n\n# A tibble: 6 √ó 7\n  Divisi√≥n Clase    Orden    Familia       G√©nero Scientific.name `Nombre com√∫n`\n  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt;           &lt;chr&gt;         \n1 Chordata Amphibia Anura    Strabomantid‚Ä¶ Geoba‚Ä¶ Sciurus granat‚Ä¶ Rana sierra d‚Ä¶\n2 Chordata Reptilia Squamata Teiidae       Ameiva Cerdocyon thous Lagarto Lobito\n3 Chordata Amphibia Anura    Strabomantid‚Ä¶ Serra‚Ä¶ Potos flavus    Rana ladrona ‚Ä¶\n4 Chordata Reptilia Squamata Anolidae      Anolis Procyon cancri‚Ä¶ Abaniquilllo ‚Ä¶\n5 Chordata Reptilia Squamata Colubridae    Lepto‚Ä¶ Coendou longic‚Ä¶ Falsa Mapan√°  \n6 Chordata Amphibia Anura    Leptodactyli‚Ä¶ Lepto‚Ä¶ Eira barbara    Rana Picuda   \n\nglimpse(data)\n\nRows: 10\nColumns: 7\n$ Divisi√≥n        &lt;chr&gt; \"Chordata\", \"Chordata\", \"Chordata\", \"Chordata\", \"Chord‚Ä¶\n$ Clase           &lt;chr&gt; \"Amphibia\", \"Reptilia\", \"Amphibia\", \"Reptilia\", \"Repti‚Ä¶\n$ Orden           &lt;chr&gt; \"Anura\", \"Squamata\", \"Anura\", \"Squamata\", \"Squamata\", ‚Ä¶\n$ Familia         &lt;chr&gt; \"Strabomantidae\", \"Teiidae\", \"Strabomantidae\", \"Anolid‚Ä¶\n$ G√©nero          &lt;chr&gt; \"Geobatrachus\", \"Ameiva\", \"Serranobatrachus\", \"Anolis\"‚Ä¶\n$ Scientific.name &lt;chr&gt; \"Sciurus granatensis\", \"Cerdocyon thous\", \"Potos flavu‚Ä¶\n$ `Nombre com√∫n`  &lt;chr&gt; \"Rana sierra de Walker\", \"Lagarto Lobito\", \"Rana ladro‚Ä¶\n\n\n\nsp.list&lt;- data |&gt; distinct(Scientific.name)\nsp.list\n\n# A tibble: 10 √ó 1\n   Scientific.name      \n   &lt;chr&gt;                \n 1 Sciurus granatensis  \n 2 Cerdocyon thous      \n 3 Potos flavus         \n 4 Procyon cancrivorus  \n 5 Coendou longicaudatus\n 6 Eira barbara         \n 7 Neogale frenata      \n 8 Dasyprocta punctata  \n 9 Alouatta seniculus   \n10 Iguana iguana        \n\n\n\n# obteniendo datos UICN\n\nAPI &lt;- \"MuXfvwppcPU8NwRvszhKskays14Ld4q66cCD\" #https://apiv3.iucnredlist.org/, provide IUCN acess\n\nIUCN.list &lt;- iucn_summary(sp.list$Scientific.name, distr_detail= TRUE, key =API)\n\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ïê‚ïê  1 queries  ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n\n\n# reacomodo de los datos \niucn_status(IUCN.list)\n\n  Sciurus granatensis       Cerdocyon thous          Potos flavus \n                   NA                    NA                    NA \n  Procyon cancrivorus Coendou longicaudatus          Eira barbara \n                   NA                    NA                    NA \n      Neogale frenata   Dasyprocta punctata    Alouatta seniculus \n                   NA                    NA                    NA \n        Iguana iguana \n                   NA \n\n# data a base de datos\nresultado_iucn&lt;-iucn_status(IUCN.list) |&gt; as.data.frame()\n\nresultado_completo &lt;- data.frame(Especie = sp.list$Scientific.name, Status = resultado_iucn)\n# view(resultado_completo)\n\n# para descargar los datos\n#write_xlsx(resultado_completo, \"resultado.xlsx\")"
  },
  {
    "objectID": "posts/Modelo-distribucion-especies/index.html",
    "href": "posts/Modelo-distribucion-especies/index.html",
    "title": "Modelos de Distribuci√≥n de Especies (SDM) en R",
    "section": "",
    "text": "Surgen en respuesta a la necesidad de conocer el nicho ecol√≥gico de las especies y as√≠ por estimar el radio de acci√≥n de estas en funci√≥n de sus requerimientos.\nDentro de estos modelos se encuentras\n\nGLM, GAM (Guisan, Edwards y Hastle, 2002)\nRedes neuronales (Manel y Ormerod, 1999)\nBioclim (Rusby, 1991)\nDomain (Carpenter y Winter, 1993)\nENFA (ecological niche factor analysis)\nMaxent (Phillips y Schapire, 2006)\nRandom forest"
  },
  {
    "objectID": "posts/Modelo-distribucion-especies/index.html#qu√©-son-los-sdm",
    "href": "posts/Modelo-distribucion-especies/index.html#qu√©-son-los-sdm",
    "title": "Modelos de Distribuci√≥n de Especies (SDM) en R",
    "section": "",
    "text": "Surgen en respuesta a la necesidad de conocer el nicho ecol√≥gico de las especies y as√≠ por estimar el radio de acci√≥n de estas en funci√≥n de sus requerimientos.\nDentro de estos modelos se encuentras\n\nGLM, GAM (Guisan, Edwards y Hastle, 2002)\nRedes neuronales (Manel y Ormerod, 1999)\nBioclim (Rusby, 1991)\nDomain (Carpenter y Winter, 1993)\nENFA (ecological niche factor analysis)\nMaxent (Phillips y Schapire, 2006)\nRandom forest"
  },
  {
    "objectID": "posts/Modelo-distribucion-especies/index.html#c√≥mo-se-eval√∫a-un-modelo-de-distribuci√≥n-de-especies",
    "href": "posts/Modelo-distribucion-especies/index.html#c√≥mo-se-eval√∫a-un-modelo-de-distribuci√≥n-de-especies",
    "title": "Modelos de Distribuci√≥n de Especies (SDM) en R",
    "section": "¬øC√≥mo se eval√∫a un modelo de distribuci√≥n de especies?",
    "text": "¬øC√≥mo se eval√∫a un modelo de distribuci√≥n de especies?\nPara evaluar la calidad de los modelos estad√≠sticos, los mas usados son:\n\nROC (Receiver operating characteristics)\nAUC (Area under the curve)\n\nAcompa√±ados de m√©todos como: Validaci√≥n cruzada, validaci√≥n cruzada generalizada, Bootstrapping, Kappa de Cohen, An√°lisis de correlaci√≥n lineal, entre otras.\nLa curva ROC es una representaci√≥n gr√°fica de un modelo para posibles puntos de corte, y necesita que los datos que se eval√∫an sean de presencia o pseudoausencia (o solo ausencia en su defecto).\n\nM√°xima entrop√≠a\nm√©todo para hacer predicciones a partir de informaci√≥n incompleta. El prop√≥sito es estimar una distribuci√≥n de probabilidad y as√≠ encontrar la distribuci√≥n sujeta a un conjunto de restricciones que representan la infomaci√≥n incompleta acerca de la distribuci√≥n en estudio.\nSu objetivo es estimarla idoneidad de la especie (Hutchinson, 1957).\n\n\nDatos necesarios para trabajar con SDM\n\npresencia de la especies\nClima / Variables importantes para la especie\nPseudo-ausencias (simulaci√≥n de observaciones de ausencia)"
  },
  {
    "objectID": "posts/SIG-con-R/index.html",
    "href": "posts/SIG-con-R/index.html",
    "title": "SIG con R: Vectores part 1",
    "section": "",
    "text": "Sistemas de informaci√≥n geogr√°fico con R"
  },
  {
    "objectID": "posts/SIG-con-R/index.html#cargar-y-trazar-archivos-shapefile",
    "href": "posts/SIG-con-R/index.html#cargar-y-trazar-archivos-shapefile",
    "title": "SIG con R: Vectores part 1",
    "section": "Cargar y trazar archivos Shapefile",
    "text": "Cargar y trazar archivos Shapefile\n\nlibrary(sf) # para abrir archivos shp\nlibrary(sp) \n# library(rgdal)\n\n# leyendo shapefile de Colombia\n1col_admin&lt;- read_sf(\"COL_adm/COL_adm1.shp\")\n2plot(col_admin)\n\n\n1\n\nc√≥digo de library sf, te visualiza el shp como base de datos\n\n2\n\nSe generan varios mapas que corresponden al n√∫mero de columnas de la base de datos.\n\n\n\n\n\n\n\n\n\n\nplot(col_admin[1,5]) # especificando la fila y la columna\n\n\n\n\n\n\n\n# codigo del paquete rgdal \n# col_admin2&lt;- readOGR(\"COL_adm/COL_adm1.shp\")"
  },
  {
    "objectID": "posts/SIG-con-R/index.html#dibujar-geometr√≠as-vectoriales",
    "href": "posts/SIG-con-R/index.html#dibujar-geometr√≠as-vectoriales",
    "title": "SIG con R: Vectores part 1",
    "section": "Dibujar geometr√≠as vectoriales",
    "text": "Dibujar geometr√≠as vectoriales\n\nCrear geometr√≠as vectoriales\n\n#install.packages(\"mapedit\")\n#install.packages(\"mapview\")\nlibrary(mapview)\nlibrary(mapedit)\nlibrary(dplyr)\n\n# 1. Cargar una ventana con un mapa base\nmapview()\n\n\n\n\n\n\n# para colocar puntos, poligonos o lineas\n1 puntos&lt;- mapview() |&gt; editMap()\n\n\n1\n\nEsto te abre un panel de herramientas para colocar puntos y pol√≠gonos dentro del mapa interactivo y se guarda como base de datos\n\n\n\n\n\n# Guardando como archivo shape\nlibrary(sf)\nmapview(puntos$drawn) # se selecciona todo lo que se dibujo anteriormente\n\nNULL\n\n# write_sf(puntos$drawn, \"COL_adm/puntos.shp\") \n# solo se pueden guardar o solo puntos, poligonos, no se pueden mezclar."
  },
  {
    "objectID": "posts/SIG-con-R/index.html#convertir-csv-a-forma-manipulaci√≥n-vectorial",
    "href": "posts/SIG-con-R/index.html#convertir-csv-a-forma-manipulaci√≥n-vectorial",
    "title": "SIG con R: Vectores part 1",
    "section": "Convertir csv a forma / manipulaci√≥n vectorial",
    "text": "Convertir csv a forma / manipulaci√≥n vectorial\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(mapview)\n\n# abriendo base de datos \nobs&lt;- read.csv2(\"specie_rana.csv\", header = TRUE)\nhead(obs)\n\n                     Species Longitude Latitude Temp Prec Prec_qs Prec_qh\n1 Leucostethus fraterdanieli  -75.8531   4.8668  223 1756     678     299\n2 Leucostethus fraterdanieli  -75.8348   4.6978  217 1870     647     316\n3 Leucostethus fraterdanieli  -75.5791   4.7352  177 2079     801     313\n4 Leucostethus fraterdanieli  -75.8320   4.6083  217 1762     652     271\n5 Leucostethus fraterdanieli  -75.4441   5.1852  159 2292     991     342\n6 Leucostethus fraterdanieli  -75.6869   5.2415  233 1852     677     287\n  elevacion\n1       999\n2      1162\n3      1918\n4      1155\n5      2213\n6       838\n\n\n\n# convirtiendo a shp\nobs_shp&lt;- st_as_sf(obs, coords = c(\"Longitude\", \"Latitude\"), crs=4326)\nhead(obs_shp)\n\nSimple feature collection with 6 features and 6 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.8531 ymin: 4.6083 xmax: -75.4441 ymax: 5.2415\nGeodetic CRS:  WGS 84\n                     Species Temp Prec Prec_qs Prec_qh elevacion\n1 Leucostethus fraterdanieli  223 1756     678     299       999\n2 Leucostethus fraterdanieli  217 1870     647     316      1162\n3 Leucostethus fraterdanieli  177 2079     801     313      1918\n4 Leucostethus fraterdanieli  217 1762     652     271      1155\n5 Leucostethus fraterdanieli  159 2292     991     342      2213\n6 Leucostethus fraterdanieli  233 1852     677     287       838\n                 geometry\n1 POINT (-75.8531 4.8668)\n2 POINT (-75.8348 4.6978)\n3 POINT (-75.5791 4.7352)\n4  POINT (-75.832 4.6083)\n5 POINT (-75.4441 5.1852)\n6 POINT (-75.6869 5.2415)\n\nmapview(obs_shp)\n\n\n\n\n\nLuego esto se puede exportar como archivo shapefile como vimos anteriormente"
  },
  {
    "objectID": "posts/SIG-con-R/index.html#cambiar-el-sistema-de-coordenadas-de-referencia-de-un-shapefile",
    "href": "posts/SIG-con-R/index.html#cambiar-el-sistema-de-coordenadas-de-referencia-de-un-shapefile",
    "title": "SIG con R: Vectores part 1",
    "section": "Cambiar el sistema de coordenadas de referencia de un shapefile üìç",
    "text": "Cambiar el sistema de coordenadas de referencia de un shapefile üìç\nPara cambiarlo nos dirigimos a la p√°gina: https://spatialreference.org/ para encontrar las diferentes proyecciones.\n\n# Cambiar sistemas de coordenas de una geometria vectorial\nlibrary(sf)\nlibrary(raster)\nlibrary(geodata)\n\n# obtener limite de un pais de interes que nos servir? como ejemplo\n\ncolombia&lt;-gadm(country=\"COL\", level= 0, path =\"Colombia\" ) |&gt; st_as_sf()\ncolombia\n\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -81.84153 ymin: -4.228429 xmax: -66.83774 ymax: 15.91248\nGeodetic CRS:  WGS 84\n  GID_0  COUNTRY                       geometry\n1   COL Colombia MULTIPOLYGON (((-69.92329 -...\n\n\n\n# reproyectar con proj4\ncol_magna&lt;- st_transform(colombia, \"+proj=tmerc +lat_0=4.596200416666666 +lon_0=-74.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\")\ncol_magna\n\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 152612.3 ymin: 22983.61 xmax: 1807919 ymax: 2258249\nProjected CRS: +proj=tmerc +lat_0=4.596200416666666 +lon_0=-74.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\n  GID_0  COUNTRY                       geometry\n1   COL Colombia MULTIPOLYGON (((1461621 271...\n\n\nSe busca en la p√°gina https://spatialreference.org/ el tipo de proyecci√≥n (en este caso la Magma SIRGAS) y se pega el codigo que ofrece\n\n# reproyectar con codigo EPSG\ncol_utm&lt;-st_transform(colombia, crs= 32618)\ncol_utm\n\nSimple feature collection with 1 feature and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -245935.3 ymin: -469204.3 xmax: 1411165 ymax: 1763314\nProjected CRS: WGS 84 / UTM zone 18N\n  GID_0  COUNTRY                       geometry\n1   COL Colombia MULTIPOLYGON (((1064147 -46...\n\n\n\n\n\nZonas UTM"
  },
  {
    "objectID": "posts/SIG_raster/index.html",
    "href": "posts/SIG_raster/index.html",
    "title": "Archivos raster en R",
    "section": "",
    "text": "library(raster)\ndem&lt;- raster (\"Capas/dem/DEM.tif\")\nplot(dem)\n\n\n\n\n\n\n\n\n\n# observemos las caracter√≠sticas\ndem\n\nclass      : RasterLayer \ndimensions : 5705, 6368, 36329440  (nrow, ncol, ncell)\nresolution : 12.5, 12.5  (x, y)\nextent     : 528403.3, 608003.3, 670363, 741675.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \nsource     : DEM.tif \nnames      : DEM \n\n# para ver los valores maximos y minimos \nsummary(dem)\n\n         DEM\nMin.      86\n1st Qu.  130\nMedian   163\n3rd Qu.  293\nMax.    1405\nNA's       0"
  },
  {
    "objectID": "posts/SIG_raster/index.html#cargar-un-raster",
    "href": "posts/SIG_raster/index.html#cargar-un-raster",
    "title": "Archivos raster en R",
    "section": "",
    "text": "library(raster)\ndem&lt;- raster (\"Capas/dem/DEM.tif\")\nplot(dem)\n\n\n\n\n\n\n\n\n\n# observemos las caracter√≠sticas\ndem\n\nclass      : RasterLayer \ndimensions : 5705, 6368, 36329440  (nrow, ncol, ncell)\nresolution : 12.5, 12.5  (x, y)\nextent     : 528403.3, 608003.3, 670363, 741675.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \nsource     : DEM.tif \nnames      : DEM \n\n# para ver los valores maximos y minimos \nsummary(dem)\n\n         DEM\nMin.      86\n1st Qu.  130\nMedian   163\n3rd Qu.  293\nMax.    1405\nNA's       0"
  },
  {
    "objectID": "posts/SIG_raster/index.html#como-crear-un-stack",
    "href": "posts/SIG_raster/index.html#como-crear-un-stack",
    "title": "Archivos raster en R",
    "section": "Como crear un stack",
    "text": "Como crear un stack\nLos stack nos permiten incluir varios raster en solo uno. Ten en cuenta que los raster tengan la misma proyecci√≥n y el mismo extent\n\nForma uno\n\n# Cargar cada raster de forma independiente\nbio1&lt;-raster(\"Capas/bio1.tif\")\nbio2&lt;-raster(\"Capas/bio2.tif\")\nbio3&lt;-raster(\"Capas/bio3.tif\")\nbio4&lt;-raster(\"Capas/bio4.tif\")\n\n# Crear un stack\nbios&lt;-stack(bio1, bio2, bio3, bio4)\nplot(bios)\n\n\n\n\n\n\n\nplot(bios[[1]])\n\n\n\n\n\n\n\nbio12_2&lt;-bios[[3]]\n\n\n# Cargar todos los raster de una carpeta en un stack\nbios19&lt;-stack(list.files(path=\"Capas/\", pattern = \".tif\", full.names = TRUE))\nbios19\n\nclass      : RasterStack \ndimensions : 242, 180, 43560, 19  (nrow, ncol, ncell, nlayers)\nresolution : 0.0833, 0.0833  (x, y)\nextent     : -81.8726, -66.8786, -4.2123, 15.9463  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      :       bio1,      bio10,      bio11,      bio12,      bio13,      bio14,      bio15,      bio16,      bio17,      bio18,      bio19,       bio2,       bio3,       bio4,       bio5, ... \nmin values :  21.154696,  28.154696,   9.340766, 268.150604,  86.975685,   0.000000,  11.293017, 171.408234,   0.000000,  23.518999,   0.000000,  51.086884,  67.000000, 140.313873,  74.712906, ... \nmax values :  290.19424,  301.67709,  282.98999, 9912.64258, 1049.16125,  653.17615,  115.61718, 3034.19897, 2161.18262, 2428.07837, 2785.71558,  131.88080,   93.79576, 1193.03503,  362.45981, ... \n\nplot(bios19)"
  },
  {
    "objectID": "posts/SIG_raster/index.html#reproyectar-un-raster",
    "href": "posts/SIG_raster/index.html#reproyectar-un-raster",
    "title": "Archivos raster en R",
    "section": "Reproyectar un raster",
    "text": "Reproyectar un raster\nSe puede hacer para un raster o un stack\n\nb1&lt;- raster(\"Capas/bio1.tif\")\n\n# reproyectar un solo raster\nb1utm&lt;-projectRaster(b1, crs=\"+proj=utm +zone=18 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\")\nb1utm\n\nclass      : RasterLayer \ndimensions : 254, 191, 48514  (nrow, ncol, ncell)\nresolution : 9220, 9210  (x, y)\nextent     : -312700.6, 1448319, -513239.8, 1826100  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : bio1 \nvalues     : 30.55129, 290.1524  (min, max)\n\nb2&lt;-raster(\"Capas/bio2.tif\")\n\n\n# Creo stack\nb12&lt;-stack(b1, b2)\n\n# Rreproyectar un stack\nb12_utm&lt;-projectRaster(b12, crs=\"+proj=utm +zone=18 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\")\nb12_utm\n\nclass      : RasterBrick \ndimensions : 254, 191, 48514, 2  (nrow, ncol, ncell, nlayers)\nresolution : 9220, 9210  (x, y)\nextent     : -312700.6, 1448319, -513239.8, 1826100  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      :     bio1,     bio2 \nmin values : 30.55129, 51.27524 \nmax values : 290.1524, 131.3687"
  },
  {
    "objectID": "posts/operaciones-vector-raster/index.html",
    "href": "posts/operaciones-vector-raster/index.html",
    "title": "Operaciones entre vectores y raster",
    "section": "",
    "text": "Vamos a iniciar‚Ä¶üòú"
  },
  {
    "objectID": "posts/operaciones-vector-raster/index.html#cortar-un-raster-con-un-vector",
    "href": "posts/operaciones-vector-raster/index.html#cortar-un-raster-con-un-vector",
    "title": "Operaciones entre vectores y raster",
    "section": "Cortar un raster con un vector",
    "text": "Cortar un raster con un vector\n\nlibrary(raster)\nlibrary(sf)\n\n\n# cargar las capas \n\ncol_shp &lt;- read_sf(\"Colombia_LO.shp\")\nbio &lt;- raster(\"DEM.tif\")\nplot(bio)\n\n\n# cortando shape con raster\n\nb1 &lt;- crop(bio, col_shp)\n\nSe coloca primero la capa raster luego el shape. Crop lo que hace es que recorta el raster con la silueta de un cuadrado\n\n# cortando shape con raster\n\nb2 &lt;- mask(b1, col_shp)\n           # raster, poligono \n\n\n# Juntando las funciones para que sea un solo comando\n\ncortado &lt;- bio |&gt; crop(col_shp) |&gt; mask(col_shp)\n\n\n\n\n\n\n\nTener en cuenta\n\n\n\nSe aconseja utilizar primero la funci√≥n crop para luego ejecutar mask\n\n\nPara cortar un stack se aplica el mismo proceso anterior."
  }
]