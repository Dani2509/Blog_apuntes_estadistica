install.packages("sf")
install.packages("sp")
library(sf) # para abrir datos espaciales
library(sp)
dir()
setwd("posts/SIG-con-R/COL_adm")
# leyendo shapefile de Colombia
col_admin<- read_sf("COL_adm/COL_adm1.shp")
plot(col_admin)
col_admin2<- readOGR("COL_adm/COL_adm1.shp")
install.packages("terra")
View(col_admin)
install.packages('rgdal')
library(rgdal)
install.packages("C:/Users/USUARIO/Downloads/rgdal_1.6-7.tar.gz", repos = NULL, type = "source")
library(rgdal)
install.packages("C:/Users/USUARIO/Downloads/rgdal_1.6-7.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/USUARIO/Downloads/rgdal_1.6-6.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/USUARIO/Downloads/rgeos_0.6-4.tar.gz", repos = NULL, type = "source")
#install.packages("mapedit")
#install.packages("mapview")
library(mapview)
install.packages("mapedit")
install.packages("mapview")
library(mapview)
library(sf) # para abrir archivos shp
install.packages("mapedit")
#install.packages("mapedit")
#install.packages("mapview")
library(mapview)
library(mapedit)
library(dplyr)
# 1. Cargar una ventana con un mapa base
mapview()
puntos<- mapview() |> editMap()
# Guardando como archivo shape
library(sf)
mapview(puntos$drawn) # se selecciona todo lo que se dibujo anteriormente
write_sf(puntos$drawn, "puntos.shp")
write_sf(puntos$drawn, "puntos.shp")
write_sf(puntos$drawn, "COL_adm/puntos.shp")
write_sf(puntos$drawn, "COL_adm/puntos.shp")
mapview(puntos$drawn) # se selecciona todo lo que se dibujo anteriormente
# Guardando como archivo shape
library(sf)
write_sf(puntos$drawn, "COL_adm/puntos.shp")
mapview(puntos$drawn) # se selecciona todo lo que se dibujo anteriormente
#| class-source: "Crear puntos"
puntos<- mapview() |> editMap() #<1>
#install.packages("mapedit")
#install.packages("mapview")
library(mapview)
library(mapedit)
library(dplyr)
#| class-source: "Crear puntos"
puntos<- mapview() |> editMap() #<1>
# Guardando como archivo shape
library(sf)
mapview(puntos$drawn) # se selecciona todo lo que se dibujo anteriormente
write_sf(puntos$drawn, "COL_adm/puntos.shp")
#| class-source: "Crear puntos"
puntos<- mapview() |> editMap() #<1>
mapview(puntos$drawn) # se selecciona todo lo que se dibujo anteriormente
write_sf(puntos$drawn, "COL_adm/puntos.shp")
mapview(puntos$drawn) # se selecciona todo lo que se dibujo anteriormente
library(tidyverse)
# abriendo base de datos
obs<- read.csv2("specie_rana.csv", header = TRUE)
head(obs)
head(obs)
library(sf)
library(mapview)
head(obs)
# convirtiendo a shp
obs_shp<- st_as_sf(obs, coords = c(Longitude, Latitude), crs=4326)
# convirtiendo a shp
obs_shp<- st_as_sf(obs, coords = c("Longitude", "Latitude"), crs=4326)
# Cambiar sistemas de coordenas de una geometria vectorial
library(sf)
library(raster)
# obtener limite de un pais de interes que nos servir? como ejemplo
colombia <- getData(name = "GADM", country = "COL", level = 0) %>% st_as_sf()
library(raster)
# Cambiar sistemas de coordenas de una geometria vectorial
library(sf)
colombia <- getData(name = "GADM", country = "COL", level = 0) %>% st_as_sf()
colombia
Mexico_2<-getData(name = "GADM", country="MEX", level= 2) %>% st_as_sf()
install.packages("geodata")
library(geodata)
Mexico_2<-getData(name = "GADM", country="MEX", level= 2) %>% st_as_sf()
mapview(Mexico_2)
Mexico_2<-getData(name = "GADM", country="MEX", level= 2)
library(terra)
Mexico_2<-getData(name = "GADM", country="MEX", level= 2)
Mexico_2<-getData(name = "GADM", country="MEX", level= 2)
library(geodata)
getData("ISO3")
Mexico<-gadm(name = "GADM", country="MEX", level= 1) %>% st_as_sf()
Mexico<-gadm(country="MEX", level= 1) %>% st_as_sf()
Mexico_2<-gadm(country="MEX", level= 2, path ="Mexico" ) |> st_as_sf()
mapview(Mexico_2)
library(getdata)
library(geodata)
colombia<-gadm(country="COL", level= 0, path ="Colombia" ) |> st_as_sf()
# reproyectar con codigo EPSG
col_utm<-st_transform(colombia, crs= 32618)
col_utm
# reproyectar con proj4
col_magna<- st_transform(colombia, "+proj=tmerc +lat_0=4.596200416666666 +lon_0=-74.07750791666666 +k=1 +x_0=1000000 +y_0=1000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
col_magna
colombia
# convirtiendo a shp
obs_shp<- st_as_sf(obs, coords = c("Longitude", "Latitude"), crs=4326)
head(obs_shp)
mapview(obs_shp)
